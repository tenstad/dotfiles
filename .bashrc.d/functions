ceildiv() {
        echo $(( ( $1 / $2 ) + ( $1 % $2 > 0 ) ))
}

floordiv() {
        echo $(( $1 / $2 ))
}

trimmid() {
        if [[ $2 -le 4 ]]; then
                echo "${1:0:$2}"
        elif [[ $(printf "%s" "$1" | wc -m) -gt $2 ]]; then
                lower=$(ceildiv $(( $2 - 2 )) 2)
                upper=$(floordiv $(( $2 - 2 )) 2)
                echo "${1:0:${lower}}..${1:(-${upper})}"
        else echo "$1"; fi
}

ps1() {
        # non-printable bytes are wrapped in \[ \] for correct line length calculation in PS1
        magenta="\[\033[01;35m\]"
        cyan="\[\033[01;36m\]"
        blue="\[\033[01;34m\]"
        reset="\[\033[0m\]"
        PS1=""

        context=$(kubectl config get-contexts --no-headers | grep '\*')
        cluster=$(echo "$context" | awk '{print $3}' | sed "${PS1_K8S_SED:-s/:[0-9]*//}")
        if [ -n "$cluster" ]; then
                ns=$(echo "$context" | awk '{print $5}')
                ns=$(trimmid "$ns" 16)
                k8s_symbol=$'\xE2\x8E\x88'
                PS1="$PS1${cyan}${ns}${blue}${k8s_symbol}${cyan}${cluster}${reset} "
        fi

        PS1="$PS1${magenta}\w${reset} "

        branch=$(git branch --show-current 2> /dev/null)
        if [ -n "$branch"  ];then
                branch=$(trimmid "$branch" 16)
                branch_symbol=$'\xE2\x8E\x87'
                PS1="$PS1${blue}${branch_symbol} ${cyan}${branch}${reset} "
        fi
}

previewhighlights() {
	langs=$(curl -sSf https://highlightjs.org/demo \
		| sed 's|.*lang-selector\(.*\)selector.*|\1|' \
		| sed "s|</option>|\n|g" \
		| sed -n "s|^<option>||p" \
	)
	for lang in $langs; do
		echo -e "${lang}\n\n\`\`\`${lang}\n${1}\n\`\`\`\n"
	done
}
